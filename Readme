**WaterFall Model(Software Development LifeCycle Method)**

> Requirements
    > Design 
        > Development 
            > Testing 
                > Deployment 
                    > Maintainance

--------------------------------------------------------------

**Parameter          Monolith            Microservices**
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Development Speed  Slow                Fast
Code Repo          Large and complex   Small and efficient
Scalability        Complex             Easy
Deployment         Complex             Hard
Tech Stack         Restricted          Flexible
Infra Cost         Low                 High
Complexity         High                Low
Fault Isolation    Hard                Easy
Testing            Easy                Hard
Ownership          Centralized         Distributed
Maintenance        Hard                Easy
Debugging          Easy                Hard
Dev Experience     Average             Good

--------------------------------------------------------------

What are we buiding in Dev Tinder

> Two Microservices
    1. FrontEnd: React
    2. Backend: Nodejs

Both the microservices will communicate using APIs

--------------------------------------------------------------

**DevTinder**

1. Create an account
2. Login
3. Update your profile
4. Feed page-explore
5. Send connection request
6. See due matched
7. See the request we've sent/received
8. Update your profile


--------------------------------------------------------------

**HTTP Methods**

1. POST
2. GET
3. PATCH
4. DELETE


--------------------------------------------------------------

**Advanced routing techniques**

1. /ab?c : b is optional
    /a(bc)?d : We can group bc as well

2. /ab+c : Multiple b can be in place, such as abbbbbbbbc
    /a(bc)+d : Multiple b can be in place, such as abbbbbbbbc

3. /ab*cd : It will start with ab and anything in between and end with cd

4. RegEx /a/ : It means anywhere in path a is there it will work.
    /.*fly$/ : It will start with anything and end with fly


--------------------------------------------------------------


**Reading the query parameters**

app.get("/user", (req,res) => {
    console.log(req.query)
    res.send({firstName: "Akshay", lastName: "Saini"})
})

To read single parameter
http://localhost:3000/user?userid=101

To read multiple parameters
http://localhost:3000/user?userid=101&password=testing


**Dynamic Routes**

http://localhost:3000/user/101/mypassword

app.get("/user/:userid", (req,res) => {
    console.log(req.query)
    res.send({firstName: "Akshay", lastName: "Saini"})
})

Complex param

app.get("/user/:userid/:username:/password", (req,res) => {
    console.log(req.params)
    res.send({firstName: "Akshay", lastName: "Saini"})
})

